---
- hosts: hosts

  vars_files: ["vars/default.yml"]

  become: true
  gather_facts: true

  pre_tasks:
  - name: 'install curl'
    raw: sudo apt-get -y install curl
    when: ansible_distribution_version == '16.04'
    tags: 
    - curl
    - devtools
  
  - name: 'install zlib'
    raw: sudo apt-get -y install zlib1g-dev
    when: ansible_distribution_version == '16.04'
    tags: 
    - zlib
    - devtools
    
  - name: 'install bundler'
    raw: sudo apt-get -y install bundler
    when: ansible_distribution_version == '16.04'
    tags: 
    - bundler
    - devtools
  
  - name: 'install ruby'
    raw: sudo apt-get -y install ruby-full
    when: ansible_distribution_version == '16.04'
    tags: 
    - ruby
    - devtools
    
  - name: 'install SASS / SCSS'
    raw: sudo gem install sass --no-user-install
    when: ansible_distribution_version == '16.04'
    tags: 
    - ruby
    - devtools
    
  - name: 'install node'
    raw: curl -sL https://deb.nodesource.com/setup_8.x | bash - && apt-get install -y nodejs
    when: ansible_distribution_version == '16.04'
    tags: 
    - node
    - devtools
  
  - name: 'Create node global installation folder'
    raw:  sudo mkdir /home/{{server_runs_as}}/.npm-global/ &&  sudo npm config set prefix /home/{{server_runs_as}}/.npm-global/ && sudo chmod -R 777 /home/{{server_runs_as}}/.npm-global
    when: ansible_distribution_version == '16.04'
    tags: 
    - node
    - devtools
    
  - name: 'update profile file'
    raw:  sudo touch /home/{{server_runs_as}}/.profile && export PATH=/home/{{server_runs_as}}/.npm-global/bin:$PATH > /home/{{server_runs_as}}/.profile && sudo chmod -R 777 /home/{{server_runs_as}}/.profile
    when: ansible_distribution_version == '16.04'
    tags: 
    - node
    - devtools
    
  - name: 'update system variables'
    raw:  source /home/{{server_runs_as}}/.profile
    when: ansible_distribution_version == '16.04'
    tags: 
    - node
    - devtools
  
  - name: 'install python2'
    raw: sudo apt-get -y install python-simplejson
    when: ansible_distribution_version == '16.04'
    tags: python

  - name: Add ondrej PHP repositories
    apt_repository: repo='ppa:ondrej/php' state=present
    tags: lamp

  - name: Add ondrej Apache repositories
    apt_repository: repo='ppa:ondrej/apache2' state=present
    tags: lamp

  - name: Add ondrej Ansible repositories
    apt_repository: repo='ppa:ansible/ansible' state=present
    tags: devtools

  - name: Update apt cache
    apt: update_cache=yes
    tags:
      - aptupdate

  - name: Create system User
    user:
      name: "{{newuser_username}}"
      comment: "{{newuser_name}}"
      generate_ssh_key: yes
    tags:
      - createuser

  - name: Expire password
    command: chage -d 0 {{newuser_username}}
    tags:
      - createuser

#  - name: Install nautilus-open-terminal
#    apt: name=nautilus-open-terminal state=present

#  - name: Install nautilus-image-converter
#    apt: name=nautilus-image-converter state=present

  roles:
    - { 
         role: romaincabassot.ansible-ocsinventory-agent, 
         ocsinventory_launch_options: "--server={{ocs_server_url}}",
         ocsinventory_launch_after_install: true,
         ocsinventory_setup_cronjob: true,
         ocsinventory_cronjob_name: "ocsinventory-agent",
         ocsinventory_cronjob_user: "root",
         ocsinventory_cronjob_month: "*",
         ocsinventory_cronjob_weekday: "*",
         ocsinventory_cronjob_day: "*",
         ocsinventory_cronjob_hour: "15",
         ocsinventory_cronjob_minute: "0",
         tags: workstation
       }

    - role: cmprescott.chrome
      tags:
      - devtools
      - chrome

    - role: geerlingguy.apache
      tags: lamp

    - { role: geerlingguy.php, php_install_version: "5.6", tags: lamp }
    - { role: geerlingguy.php, php_install_version: "7.0", tags: lamp }
    - { role: geerlingguy.php, php_install_version: "7.1", tags: lamp }

    - { role: geerlingguy.apache-php-fpm, tags: lamp }
    - role: calebwoods.bash_command
      command: 'sudo service apache2 stop'
      tags: lamp

    - { role: geerlingguy.nginx, tags: lamp }

    - role: geerlingguy.mysql
      ignore_errors: yes
      tags:
      - devtools
      - mysql
      - lamp

    - role: geerlingguy.composer
      tags:
      - devtools
      - composer

    - role: nicolai86.phantomjs
      tags:
      - devtools
      - phantomjs
      ignore_errors: yes

    - role: geerlingguy.java
      ignore_errors: yes
      when: "ansible_os_family == 'Debian'"
      java_packages:
        - openjdk-8-jdk
      tags:
      - devtools
      - java

  tasks:
  - name: Install Geany and plugins
    apt: name={{item}} state=present
    with_items:
    - geany
    - geany-plugins
    - geany-plugins-common
    - geany-plugin-addons
    - geany-plugin-prettyprinter
    - openssh-server
    tags: devtools

  - name: Install GIT
    apt: name=git-core state=present
    tags: devtools

  - name: Register Joomla Standards path
    shell: echo `pear config-get php_dir`/PHP/CodeSniffer/Standards/Joomla
    register: phpcs_joomla_path
    tags:
    - phpcs
    - devtools

  - name: stat Joomla Standards path
    stat: path="{{phpcs_joomla_path.stdout}}/ruleset.xml"
    register: phpcs_joomla_path_stat
    tags:
    - phpcs
    - devtools

  - name: Create Joomla Standards path
    file:
      path: "{{phpcs_joomla_path}}"
      state: directory
      mode: 0755
    tags:
    - phpcs
    - devtools

  - name: Install PHPCS 1.5.6 via PEAR
    shell: "pear install -f PHP_CodeSniffer-1.5.6"
    tags:
    - devtools
    - phpcs

  - name: Install Joomla Standard
    shell: "git clone https://github.com/joomla/coding-standards.git `pear config-get php_dir`/PHP/CodeSniffer/Standards/Joomla"
    when: phpcs_joomla_path_stat.stat.exists == False
    tags:
    - devtools
    - phpcs

  - name: Create NGINX Log format
    template:
      src: "templates/nginx-logformat.j2"
      dest: "/etc/nginx/conf.d/ttpl_nginx_log.conf"
    tags: lamp

  - name: Create logrotate config
    template:
      src: "templates/logrotate.j2"
      dest: "/etc/logrotate.d/ttpl"
    tags: lamp

  - name: Install codeception
    get_url:
      url: http://codeception.com/codecept.phar
      dest: /usr/bin/codecept
      mode: 0755
      timeout: 1000
    tags: devtools

  - name: Install restricted extras
    apt: name=ubuntu-restricted-extras state=present

  - name: Install npm
    apt: name=npm
    tags: devtools

  - name: Install FileZilla
    apt: name=filezilla
    tags: devtools

  - name: Install VIM
    apt: name=vim

  - name: Install Meld
    apt: name=meld state=present
    tags: devtools

  - name: Install ansible
    apt: name=ansible state=present
    tags:
    - devtools
    - ansible

  - name: Install VLC
    apt: name=vlc state=present
    tags: vlc

  - name: Install Sublime
    apt: name=sublime-text-installer state=present
    tags: devtools

  - name: Remove default NGINX vhosts file
    file:
      name: "/etc/nginx/sites-enabled/default"
      state: absent
    tags: lamp

  - name: Remove default Apache vhosts file
    file:
      name: "/etc/apache2/sites-enabled/vhosts.conf"
      state: absent
    tags: lamp

  - name: Remove default Apache 000-default file
    file:
      name: "/etc/apache2/sites-enabled/000-default.conf"
      state: absent
    tags: lamp

  - name: Remove default FPM Pool
    file:
      name: "/etc/php/{{item}}/fpm/pool.d/www.conf"
      state: absent
    tags: lamp
    with_items:
    - "5.6"
    - "7.0"

  - name: chmod hosts file
    file:
      path: "/etc/hosts"
      mode: "og+w"
    tags: devtools

  - name: Allow user to restart Apache
    lineinfile:
      dest: /etc/sudoers
      state: present
      line: "{{server_runs_as}}	ALL = NOPASSWD: /usr/sbin/service apache2 *"
      validate: 'visudo -cf %s'
    tags:
    - devtools

  - name: Allow user to restart NGINX
    lineinfile:
      dest: /etc/sudoers
      state: present
      line: "{{server_runs_as}}	ALL = NOPASSWD: /usr/sbin/service nginx *"
      validate: 'visudo -cf %s'
    tags:
    - devtools

  - name: Allow user to restart FPM (PHP 5.6)
    lineinfile:
      dest: /etc/sudoers
      state: present
      line: "{{server_runs_as}}	ALL = NOPASSWD: /etc/init.d/php5.6-fpm *"
      validate: 'visudo -cf %s'
    tags:
    - devtools

  - name: Allow user to restart FPM (PHP 7.0)
    lineinfile:
      dest: /etc/sudoers
      state: present
      line: "{{server_runs_as}}	ALL = NOPASSWD: /etc/init.d/php7.0-fpm *"
      validate: 'visudo -cf %s'
    tags: devtools

  - name: Allow user to restart MySQL
    lineinfile:
      dest: /etc/sudoers
      state: present
      line: "{{server_runs_as}}	ALL = NOPASSWD: /usr/sbin/service mysql *"
      validate: 'visudo -cf %s'
    tags: devtools
